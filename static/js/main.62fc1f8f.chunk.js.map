{"version":3,"sources":["components/Header/Header.js","actions/getBd.js","components/products/Products.js","components/products/ProductsContainer.js","components/products/ViewProduct.js","components/products/ViewProductContainer.js","components/products/Request.js","components/products/RequestContainer.js","components/Comments/Comments.js","components/Footer/Footer.js","App.js","serviceWorker.js","reducers/index.js","storeConfig.js","index.js","components/products/ViewProduct.module.css"],"names":["Header","src","className","width","alt","getProducts","dispatch","axios","get","then","res","productsToProps","data","type","payload","selectedProductToProps","setRef","Products","props","useEffect","setScreenWidth","window","screen","firstProduct","React","createRef","showModal","e","selectedProduct","_","findLast","ProductsArray","el","id","target","screenWidth","Button","variant","onClick","current","focus","Row","map","Card","style","key","Img","img","Title","name","Body","description","Footer","to","ref","ProductsContainer","connect","state","text","product","ViewProduct","Modal","show","onHide","setShowModal","closeButton","Image","SelectedProduct","s","item","ViewProductContainer","refText","Request","textInput","refToForm","setTimeout","Form","Col","xs","Control","placeholder","RequestContainer","Comments","App","path","render","Boolean","location","hostname","match","initState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.62fc1f8f.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst Header = () => {\n    return (\n        <div>\n            <img src=\"images/header.jpeg\" className=\"img-fluid\" width={'100%'} alt={\"No img\"}/>\n        </div>\n    )\n}\n\n\nexport default Header;","import axios from \"axios\";\n\nexport const PRODUCTS_TO_PROPS = \"PRODUCTS_TO_PROPS\";\nexport const SELECTED_PRODUCT_TO_PROPS = \"SELECTED_PRODUCT_TO_PROPS\";\nexport const SET_SHOW_MODAL = \"SET_SHOW_MODAL\";\nexport const SET_REF = \"SET_REF\";\nexport const SET_SCREEN_WIDTH = \"SET_SCREEN_WIDTH\";\n\nexport const getProducts = () => dispatch => {\n    axios.get('https://aijeykob.github.io/data_propducts/data.json')\n        .then(res => {\n            dispatch(productsToProps(res.data))\n        })\n\n};\n\nexport const productsToProps = data => ({\n    type: PRODUCTS_TO_PROPS, payload: data\n});\n\nexport const selectedProductToProps = data => ({\n    type: SELECTED_PRODUCT_TO_PROPS, payload: data\n});\n\nexport const setShowModal = data => ({\n    type: SET_SHOW_MODAL, payload: data\n});\nexport const setRef = data => ({\n    type: SET_REF, payload: data\n});\nexport const setScreenWidth = data => ({\n    type: SET_SCREEN_WIDTH, payload: data\n});\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React, {Fragment, useEffect} from 'react';\nimport {Button, Card, Row} from \"react-bootstrap\";\nimport _ from 'lodash'\nimport {NavLink} from \"react-router-dom\";\n\nconst Products = (props) => {\n\n    useEffect(() => {\n        props.getProducts();\n        props.setScreenWidth(window.screen.width)\n    }, []);\n    let firstProduct = React.createRef();\n\n    function goToFirstProduct() {\n        firstProduct.current.focus();\n    }\n\n    const showModal = (e) => {\n        const selectedProduct = _.findLast(props.ProductsArray, el => el.id == e.target.id);\n\n        props.selectedProductToProps(selectedProduct);\n        props.setRef(false);\n    };\n    return (\n        <Fragment>\n\n            {\n                (props.screenWidth < 768) ?\n                    <div className=\"text-center\">\n                        <Button variant={\"danger\"} onClick={goToFirstProduct}>Смотреть товары</Button>\n                    </div>\n                    : null                             //If mobile\n            }\n\n            <div className=\"container\">\n                <Row>\n\n                    {\n                        props.ProductsArray.map(el => {\n                            return (\n                                <Card style={{width: '18rem'}} key={el.id}>\n                                    <Card.Img variant=\"top\"\n                                              src={`images/${el.img}`}/>\n                                    <Card.Title><strong>{el.name}</strong></Card.Title>\n                                    <Card.Body>\n                                        <Card.Title>{el.description}</Card.Title>\n                                        <Card.Footer className={\"text-center\"}>\n\n                                            <NavLink to={\"/viewProduct\"}>\n                                                {\n                                                    (el.id === 1) ?\n                                                        <Button key={el.id} id={el.id} onClick={(e) => showModal(e)}\n                                                                variant=\"danger\"\n                                                                ref={firstProduct}>Подробнее</Button>\n                                                        :\n                                                        //Use ref for targeting first product\n                                                        <Button key={el.id} id={el.id} onClick={(e) => showModal(e)}\n                                                                variant=\"danger\">Подробнее</Button>\n                                                }\n\n                                            </NavLink>\n                                        </Card.Footer>\n                                    </Card.Body>\n                                </Card>\n                            )\n                        })\n                    }\n                </Row>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default Products;","import {connect} from 'react-redux'\nimport {getProducts, selectedProductToProps, setRef, setScreenWidth} from '../../actions/getBd'\nimport Products from \"./Products\";\n\n\nlet mapStateToProps = state => ({\n    ProductsArray: state.ProductsArray,\n    screenWidth: state.screenWidth\n})\n\nlet mapDispatchToProps = dispatch => ({\n    getProducts: () => dispatch(getProducts()),\n    setRef: (text) => dispatch(setRef(text)),\n    selectedProductToProps: (product) => dispatch(selectedProductToProps(product)),\n    setScreenWidth: (data) => dispatch(setScreenWidth(data)),\n\n\n})\n\nconst ProductsContainer = connect(mapStateToProps, mapDispatchToProps)(Products)\n\nexport default ProductsContainer\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React from 'react';\nimport {Button, Image, Modal, Row} from \"react-bootstrap\";\nimport s from \"./ViewProduct.module.css\"\nimport {Redirect} from \"react-router-dom\";\n\n\nconst ViewProduct = (props) => {\n\n    const handleClose = () => {\n        props.setShowModal(false)\n    };\n    const goToRef = () => {\n        props.setShowModal(false);\n        props.setRef(true)\n    }\n\n    return (\n        <Row className=\"justify-content-md-center \">\n            <Modal show={props.show}\n                   onHide={() => handleClose()}\n            > <Modal.Header closeButton>\n            </Modal.Header>\n\n                <Modal.Body>\n\n                    <Image className=\"img-fluid\" src={`images/${props.SelectedProduct.img}`}/>\n                    <p className={s.item}>{props.SelectedProduct.name}</p>\n                    <p>{props.SelectedProduct.description}</p>\n                    <div className=\"text-center\">\n                        <Button variant=\"danger\" onClick={() => goToRef()}>Хочу!</Button>\n                    </div>\n\n\n                </Modal.Body>\n\n\n            </Modal>\n            {\n                (props.show) ? null : <Redirect to='/lavier'/>\n            }\n        </Row>\n    )\n}\n\nexport default ViewProduct;","import {connect} from 'react-redux'\nimport {getProducts, setShowModal, setRef} from '../../actions/getBd'\nimport ViewProduct from \"./ViewProduct\";\n\n\nlet mapStateToProps = state => ({\n    SelectedProduct: state.SelectedProduct,\n    show: state.show\n})\n\nlet mapDispatchToProps = dispatch => ({\n    getProducts: () => dispatch(getProducts()),\n    setShowModal: () => dispatch(setShowModal()),\n    setRef: (refText) => dispatch(setRef(refText))\n\n})\n\nconst ViewProductContainer = connect(mapStateToProps, mapDispatchToProps)(ViewProduct)\n\nexport default ViewProductContainer\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React from 'react';\n\nimport {Button, Col, Form} from \"react-bootstrap\";\n\nconst Request = (props) => {\n    let textInput = React.createRef();\n\n    if (props.refToForm) {\n        setTimeout(() => {\n            textInput.current.focus();\n        }, 300)\n    }\n\n    return (\n        <div className=\"container\">\n            <p><strong>Оставьте заявку на косметику по акционной цене</strong>\n                (почтовая пересылка по Израилю - бесплатно)\n                В течение 1 дня консультант свяжется с вами для ответа на все вопросы о\n                качестве косметики, ее преимуществах, согласования списка товаров и\n                оформления заказа.\n            </p>\n\n\n            <Form>\n                <Col xs={6}>\n                    <p>Имя</p>\n                    <Form.Control type=\"text\" placeholder=\"Как вас Зовут?\" ref={textInput}\n\n                    />\n                    <p>Телефон</p>\n                    <Form.Control type=\"text\" placeholder=\"05...\"\n                    />\n\n                    <Button variant=\"success\">\n                        Послать данные\n                    </Button>\n                </Col>\n\n            </Form>\n        </div>\n\n\n    )\n}\n\n\nexport default Request","import {connect} from 'react-redux'\nimport {selectedProductToProps} from '../../actions/getBd'\nimport Request from \"./Request\";\n\n\nlet mapStateToProps = state => ({\n    refToForm: state.refToForm\n});\n\nlet mapDispatchToProps = dispatch => ({\n    selectedProductToProps: (product) => dispatch(selectedProductToProps(product))\n\n});\n\nconst RequestContainer = connect(mapStateToProps, mapDispatchToProps)(Request);\n\nexport default RequestContainer\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React from 'react';\n\n\nconst Comments = () => {\n    return (\n        <div>\n            <img src=\"images/comments.jpeg\" className=\"img-fluid\" width={'100%'} alt={\"No img\"}/>\n        </div>\n    )\n}\n\n\nexport default Comments;","import React from 'react';\n\n\nconst Footer = () => {\n    return (\n        <div>\n            <img src=\"images/footer.jpeg\" className=\"img-fluid\" width={'100%'} alt={\"No img\"}/>\n        </div>\n    )\n}\n\n\nexport default Footer;","import React, {Fragment} from 'react';\nimport Header from \"./components/Header/Header\";\nimport ProductsContainer from \"./components/products/ProductsContainer\";\nimport ViewProductContainer from \"./components/products/ViewProductContainer\";\nimport {Route} from \"react-router-dom\";\nimport {Row} from \"react-bootstrap\";\nimport RequestContainer from \"./components/products/RequestContainer\";\nimport Comments from \"./components/Comments/Comments\";\nimport Footer from \"./components/Footer/Footer\";\n\nfunction App() {\n    return (\n        <Fragment>\n            <Header/>\n            <ProductsContainer/>\n            <Route path=\"/viewProduct\" render={() => <ViewProductContainer/>}/>\n            <Row className=\"justify-content-md-center \">\n                <Comments/>\n                <RequestContainer/>\n                <Footer/>\n            </Row>\n        </Fragment>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n    PRODUCTS_TO_PROPS,\n    SELECTED_PRODUCT_TO_PROPS,\n    SET_SHOW_MODAL,\n    SET_REF,\n    SET_SCREEN_WIDTH\n} from '../actions/getBd';\n\nconst initState = {\n    ProductsArray: [],\n    SelectedProduct: null,\n    show: false,\n    refToForm: false,\n    screenWidth: null\n\n};\n\nexport const reducer = (state = initState, {type, payload}) => {\n    switch (type) {\n        case PRODUCTS_TO_PROPS:\n            return {\n                ...state,\n                ProductsArray: payload\n            };\n        case SELECTED_PRODUCT_TO_PROPS:\n            return {\n                ...state,\n                SelectedProduct: payload,\n                show: true\n            };\n        case SET_SHOW_MODAL:\n            return {\n                ...state,\n                show: false\n            };\n        case SET_REF:\n            return {\n                ...state,\n                refToForm: payload\n            };\n        case SET_SCREEN_WIDTH:\n            return {\n                ...state,\n                screenWidth: payload\n            };\n        default:\n            return state\n    }\n};\n","import {reducer} from \"./reducers\"\nimport {createStore, applyMiddleware, compose} from \"redux\";\nimport thunk from \"redux-thunk\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nexport const store = createStore(\n    reducer,\n    composeEnhancers(\n        applyMiddleware(thunk)\n    )\n);\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./storeConfig\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>\n    ,\n    document.getElementById('root'));\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ViewProduct_item__2WmJJ\"};"],"sourceRoot":""}